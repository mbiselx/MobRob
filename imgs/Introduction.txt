## Introduction:
The objective of this project is to create a program in Python/Aseba that:
- Uses the visual feedback of a webcam, to detect the position of a robot, its goal position and obstacles in a given environment.
- Finds the optimal path from the start position of the robot to its goal, avoiding the global obstacles.
- Controls the robot to follow the optimal path, by successively applying filters to estimate its position.
- Navigates around local obstacles using local avoidance.

## Environment
The environment consists of a table with a checkerboard pattern (each square is 200mm x 200mm). The table has blue circles in all corners. A green circle representing the goal position, black geometric shapes representing the obstacles and a Thymio robot are located within the rectangle spanned by the blue circles. Two red circles of different diameters are located on top of the Thymio.

> <img src="./imgs/environment_titel.jpg" />

> Figure XX: This figure shows the environment: the table with its checkerboard pattern and the blue circles in the corners, the green goal circle, the black obstacle shapes and the Thymio robot with two red circles*